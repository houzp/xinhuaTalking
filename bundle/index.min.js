'use strict';

/**
* @Author: St. <SuperWoods>
* @Date:   2017-01-04-21:39:00
* @Email:  st_sister@iCloud.com
* @Filename: index.js
* @Last modified by:   SuperWoods
* @Last modified time: 2017-01-05-20:06:22
* @License: MIT
* @Copyright: Copyright (c) Xinhuanet Inc. All rights reserved.
*/
$(function () {
    // 必要的全局对象
    var $window = $(window);
    var $body = $('body');
    var $topNav = $('.top-nav');
    var coverStatus = null;
    // main
    var mainSwiper = null;
    var mainSwiperRealIndex = 0;
    // 1
    var scenes1Swiper = null;
    var scenes1SwiperRealIndex = 0;
    var $scenes1 = $('#scenes1');
    var $scenes1Pagination = $scenes1.find('.swiper-pagination');
    var $scenes1SwiperButtonNext = $scenes1.find('.swiper-button-next');
    // const $scenes1SwiperButtonPrev = $scenes1.find('.swiper-button-prev');
    var $scenes1SlideLeft = $scenes1.find('.swiper-slide').find('.scenes-ani-left');
    var $scenes1SlidePic = $scenes1.find('.swiper-slide').find('.scenes1-pic');
    // 2
    var scenes2Swiper = null;
    var $scenes2 = $('#scenes2');
    var $scenes2Slide = $scenes2.find('.swiper-slide');
    // const scenes2SlideLen = $scenes2Slide.length;
    var $scenes2Items = $scenes2.find('.item');
    /* -------------------------------------------------------------------------
     * loader
    ------------------------------------------------------------------------- */
    var resources = [// 需要预加载的资源
    'index-assets/bg.jpg', 'index-assets/cover-logo.svg', 'index-assets/scenes1-btn-1-active-bg.png', 'index-assets/scenes1-btn-1-bg.png', 'index-assets/demo-pic-0.png', 'index-assets/demo-pic-1.png', 'index-assets/demo-pic-2.png', 'index-assets/demo-pic-3.png', 'index-assets/demo-pic-4.png'];
    var loader = new resLoader({
        resources: resources,
        onStart: function onStart(total) {
            // console.log('start:' + total);
            // scenes1Slide1Hide();
            // scenes3Slide1Hide();
            $scenes1.hide();
        },
        onProgress: function onProgress(current, total) {
            // console.log(current + '/' + total);
            // var percent = current / total * 100;
            // $('.progressbar').css('width', percent + '%');
            // $('.progresstext .current').text(current);
            // $('.progresstext .total').text(total);
        },
        onComplete: function onComplete(total) {
            // cover
            cover.init();
            // xinhuaTalking
            xinhuaTalking.init();
        }
    });
    /* -------------------------------------------------------------------------
     * cover
    ------------------------------------------------------------------------- */
    var cover = {
        $cover: $('#cover'),
        timeout: null,
        init: function init(_switch) {
            console.log('cover mod:', this.$cover.length);
            if (this.$cover.length && _switch !== 0 && window.location.hash.lastIndexOf('no-cover') < 0) {
                this.coverClear();
                this.coverTimeout();
                this.coverClick();
            } else {
                this.$cover.remove();
                coverStatus = 'hide';
                console.log('coverHide', coverStatus);
            }
        },
        coverClick: function coverClick() {
            var _this = this;
            _this.$cover.on('click', function () {
                TweenMax.killAll();
                _this.coverHide();
                _this.coverClear();
                console.log('click', _this.timeout);
            });
        },
        coverClear: function coverClear() {
            clearTimeout(this.timeout);
            this.timeout = null;
        },
        coverTimeout: function coverTimeout() {
            var _this = this;
            _this.timeout = setTimeout(function () {
                _this.coverHide();
            }, 200);
        },
        coverHide: function coverHide() {
            coverStatus = 'hide';
            console.log('coverHide', coverStatus);
            var _this = this;
            var time = 2.5;
            $body.addClass('overflow-hidden');
            // anis
            TweenMax.to(_this.$cover.find('.cover-logo'), time, {
                scale: 8,
                // opacity: 0,
                ease: Power4.easeInOut,
                onStart: function onStart() {
                    TweenMax.to(_this.$cover, time * 1.2, {
                        // scale: 3,
                        opacity: 0,
                        ease: Power4.easeInOut,
                        // delay: 1,
                        // ease: SlowMo.ease.config(0.7, 0.7, false),
                        onStart: function onStart() {
                            _this.$cover.off('click');
                            setTimeout(function () {
                                if (mainSwiperRealIndex === 0) {
                                    scenes1Slide1Show();
                                }
                                if (mainSwiperRealIndex === 2) {
                                    scenes3Slide1Show();
                                }
                            }, time * 0.5 * 1000);
                        },
                        onComplete: function onComplete() {
                            _this.$cover.remove();
                            $body.removeClass('overflow-hidden');
                            // if (mainSwiperRealIndex === 0) {
                            //     scenes1Slide1Show();
                            // }
                        }
                    });
                }
            });
        }
    };
    /* -------------------------------------------------------------------------
     * scenes1Slide1
    ------------------------------------------------------------------------- */
    var scenes1Slide1Ani = function scenes1Slide1Ani(swiperRealIndex) {
        if (coverStatus === 'hide' && swiperRealIndex === 0) {
            scenes1Slide1Show();
        } else {
            scenes1Slide1Hide();
        }
    };
    var scenes1Slide1Hide = function scenes1Slide1Hide() {
        TweenMax.to($topNav, 0, {
            y: 200,
            opacity: 0
        });
        TweenMax.to($scenes1Pagination, 0, {
            y: -200,
            opacity: 0
        });
        TweenMax.to($scenes1SlideLeft, 0, {
            x: 200,
            opacity: 0
        });
        TweenMax.to($scenes1SlidePic, 0, {
            x: -200,
            opacity: 0
        });
        $scenes1SwiperButtonNext.removeClass('active');
    };
    var scenes1Slide1Show = function scenes1Slide1Show() {
        TweenMax.to($topNav, 2, {
            y: 0,
            opacity: 1,
            ease: Power0.ease
        });
        TweenMax.to($scenes1Pagination, 2.5, {
            y: 0,
            opacity: 1,
            ease: Power0.ease
        });
        TweenMax.to($scenes1SlideLeft, 2.5, {
            x: 0,
            opacity: 1,
            ease: Power0.ease
        });
        TweenMax.to($scenes1SlidePic, 2, {
            x: 0,
            opacity: 1,
            ease: Power0.ease,
            onStart: function onStart() {
                $scenes1SwiperButtonNext.addClass('active');
            }
        });
    };
    /* -------------------------------------------------------------------------
     * scenes2
    ------------------------------------------------------------------------- */
    var scenes2Ani = function scenes2Ani(num, toggle) {
        console.log('scenes2Ani:', num, toggle);
        if (toggle === 'show') {
            $scenes2Slide.eq(num).find('.item').each(function (i, e) {
                TweenMax.to($(e), 0.4, {
                    x: 0,
                    opacity: 1,
                    delay: i * 0.1
                });
            });
        } else if (toggle === 'hide') {
            $scenes2Slide.eq(num).find('.item').each(function (i, e) {
                scenes2Hide($(e), 0.4, i * 0.08);
            });
        }
    };
    var scenes2Hide = function scenes2Hide(tag, time, delay) {
        TweenMax.to(tag, time, {
            x: 30,
            opacity: 0,
            delay: delay
        });
    };
    var scenes2Mouseover = function scenes2Mouseover($tag) {
        TweenMax.to($tag, 0.2, {
            scale: 1.25,
            'box-shadow': '6px 6px 32px rgba(0, 0, 0, 0.35)',
            onStart: function onStart() {
                $tag.css({ 'z-index': 2 });
                // $tag.find('img').css({
                //     width: '-=1px',
                //     height: '-=1px',
                //     'border': '1px #FFF solid',
                // });
                TweenMax.to($tag.find('.mask'), 0.8, { opacity: 0 });
            },
            onComplete: function onComplete() {
                scenes2SetTitles($tag);
            }
        });
    };
    var $scenes2TitleBox = $('#scenes2-title-box');
    var scenes2SetTitles = function scenes2SetTitles($tag) {
        $scenes2TitleBox.stop(false, true).fadeOut('2000', function () {
            $(this).html('\n                <div class="t2 title-2">' + $tag.find('.t2').html() + '</div>\n                <div class="t3 title-3">' + $tag.find('.t3').html() + '</div>\n                <div class="t1 title-1">' + $tag.find('.t1').html() + '</div>').fadeIn('2000');
        });
    };
    var scenes2Mouseout = function scenes2Mouseout($tag, time) {
        TweenMax.to($tag, 1.2, {
            scale: 1,
            'box-shadow': 'none',
            onStart: function onStart() {
                TweenMax.to($tag.find('.mask'), 1.2, { opacity: 1 });
                $tag.css({ 'z-index': 1 });
                // $tag.find('img').css({
                //     width: '100%',
                //     height: '100%',
                //     'border': 'none',
                // });
            }
        });
    };
    var scenes2Init = function scenes2Init(num) {
        console.log(num, num === 1);
        if (num === 1) {
            if (scenes2Swiper === null) {
                scenes2Swiper = new Swiper('#scenes2', {
                    lazyLoading: true,
                    effect: 'fade',
                    autoplay: 8000,
                    // loop: true, // 因为背景透明无法使用loop
                    prevButton: '#scenes2 .swiper-button-prev',
                    nextButton: '#scenes2 .swiper-button-next',
                    paginationClickable: true,
                    speed: 1800,
                    // spaceBetween: 200,
                    onInit: function onInit(swiper) {
                        $.getScript("bg-scenes2.hyperesources/bgscenes2_hype_generated_script.js");
                        scenes2Hide($scenes2Items, 0, 0);
                        scenes2Ani(swiper.activeIndex, 'show', 1);
                        var firstNum = 0;
                        var $firstItem = $scenes2Items.eq(firstNum);
                        setTimeout(function () {
                            scenes2Mouseover($firstItem);
                        }, 2500);
                        $scenes2Items.on('mouseover', function () {
                            var $this = $(this);
                            if ($this.index() !== firstNum) {
                                scenes2Mouseout($firstItem);
                            }
                            scenes2Mouseover($this);
                        });
                        $scenes2Items.on('mouseout', function () {
                            var $this = $(this);
                            scenes2Mouseout($this);
                        });
                    },
                    onSlideChangeStart: function onSlideChangeStart(swiper) {
                        scenes2Ani(swiper.activeIndex, 'show');
                        scenes2Ani(swiper.previousIndex, 'hide');
                    }
                });
            } else {
                scenes2Swiper.unlockSwipes();
                scenes2Ani(scenes2Swiper.activeIndex, 'show');
            }
        } else {
            if (scenes2Swiper !== null) {
                scenes2Swiper.lockSwipes();
                scenes2Hide($scenes2Items, 0, 0);
            }
        }
    };
    /* -------------------------------------------------------------------------
     * scenes3
    ------------------------------------------------------------------------- */
    // 3
    var scenes3Bg = null;
    var scenes3Swiper = null;
    var scenes3SwiperIns = new Array();
    var scenes3Data = new Array();
    var $scenes3 = $('#scenes3');
    var $scenes3InSlide = $scenes3.find('.scenes3-container-in .swiper-slide');
    var scenes3Init = function scenes3Init(swiperRealIndex) {
        scenes3Slide1Ani(mainSwiperRealIndex);
        if (mainSwiperRealIndex === 2) {
            if (scenes3Swiper === null) {
                // console.log('scenes3Init start', $scenes3);
                scenes3Btn();
                triangleBgInit(mainSwiperRealIndex, 2);
                scenes3Swiper = new Swiper($scenes3.selector, {
                    lazyLoading: true,
                    // autoplay: 12000,
                    // parallax: true,
                    pagination: '#scenes3-pagination',
                    prevButton: '#scenes3-prev',
                    nextButton: '#scenes3-next',
                    // paginationClickable: true,
                    speed: 3000,
                    // runCallbacksOnInit: true,
                    onInit: function onInit(swiper) {
                        scenes3GetSwiperData();
                        scenes3BtnUpdate(swiper);
                        swiper.nextButton.on('click', function () {
                            console.log('scenes3SwiperInInit', scenes3SwiperIns, swiper.realIndex);
                            if (scenes3SwiperIns[swiper.realIndex] === undefined) {
                                scenes3SwiperIns[swiper.realIndex] = scenes3SwiperInInit(swiper.realIndex);
                            }
                        });
                    },
                    onSlideChangeStart: function onSlideChangeStart(swiper) {
                        scenes3BtnUpdate(swiper);
                        // scenes3BtnHide(swiper.slides.eq(swiper.realIndex).find('.swiper-slide:eq(0)'));
                    },
                    onSlideChangeEnd: function onSlideChangeEnd(swiper) {
                        scenes3BtnShow(swiper.slides.eq(swiper.realIndex).find('.swiper-slide:eq(0)'));
                    }
                });
            } else {
                scenes3Swiper.unlockSwipes();
            }
            // bgToggle('show');
            // if (coverStatus === 'hide') {
            //     scenes3Slide1Show();
            // }
        } else {
            if (scenes3Swiper !== null) {
                scenes3Swiper.lockSwipes();
            }
            // bgToggle('hide');
        }
    };
    var scenes3BtnUpdate = function scenes3BtnUpdate(swiper) {
        var num = [swiper.realIndex - 1, swiper.realIndex + 1];
        if (num[0] < 0) {
            num[0] = scenes3Data.length - 1;
        }
        if (num[1] >= scenes3Data.length) {
            num[1] = 0;
        }
        scenes3SetSwiperButton(swiper.prevButton, num[0]);
        scenes3SetSwiperButton(swiper.nextButton, num[1]);
    };
    var scenes3Btn = function scenes3Btn() {
        $scenes3InSlide.on('mouseover mouseout', function (e) {
            var $this = $(this);
            if (e.type === 'mouseover') {
                // $this.addClass('active').siblings().removeClass('active');
                scenes3BtnHide($this.siblings());
                scenes3BtnShow($this);
            } else if (e.type === 'mouseout') {
                scenes3BtnHide($this);
                // $this.removeClass('active');
            }
        });
    };
    var scenes3BtnHide = function scenes3BtnHide($this) {
        $this.removeClass('active');
    };
    var scenes3BtnShow = function scenes3BtnShow($this) {
        $this.addClass('active');
    };
    var scenes3GetSwiperData = function scenes3GetSwiperData() {
        $scenes3.find('.scenes3-container-in').each(function (i, e) {
            var $e = $(e);
            scenes3Data.push({
                title: '\n                        ' + $.trim($e.find('.t1').text()) + '\n                        <div class="a">\n                            ' + $.trim($e.find('.t2').text()) + '\n                        </div>',
                img: $.trim($e.find('.t3').attr('src'))
            });
        });
    };
    var scenes3SetSwiperButton = function scenes3SetSwiperButton($tag, num) {
        $tag.html('\n                <div class="swiper-button-content">\n                    <div class="p">\n                        <img src="' + scenes3Data[num].img + '" width="auto" height="102">\n                    </div>\n                    <div class="t">' + scenes3Data[num].title + '</div>\n                </div>\n                <div class="icon"></div>\n                <div class="b"></div>');
    };
    var scenes3SwiperInInit = function scenes3SwiperInInit(num) {
        new Swiper('#scenes3-in' + num, {
            lazyLoading: true,
            // autoplay: 12000,
            // parallax: true,
            // pagination: $scenes3In.selector + ' .swiper-pagination',
            prevButton: '#scenes3-in-prev' + num,
            nextButton: '#scenes3-in-next' + num,
            paginationClickable: true,
            // speed: 3000,
            slidesPerView: 5,
            slidesPerGroup: 5,
            spaceBetween: 30,
            // runCallbacksOnInit: true,
            onInit: num === 0 ? function (swiper) {
                scenes3BtnShow(swiper.slides.eq(0));
            } : null
        });
    };
    /* -------------------------------------------------------------------------
     * scenes3Page1
    ------------------------------------------------------------------------- */
    var $scenes3Slide1 = $scenes3.find('.swiper-slide:eq(0)');
    var $scenes3Slide1Title = $scenes3Slide1.find('.scenes3-title');
    var $scenes3Slide1Abs = $scenes3Slide1.find('.scenes3-absract');
    var $scenes3Slide1Cont = $scenes3Slide1.find('.swiper-container');
    var scenes3Slide1Ani = function scenes3Slide1Ani(swiperRealIndex) {
        if (coverStatus === 'hide' && swiperRealIndex === 2) {
            scenes3Slide1Show();
        } else {
            scenes3Slide1Hide();
        }
    };
    var scenes3Slide1Hide = function scenes3Slide1Hide() {
        TweenMax.to($scenes3Slide1Title, 0, {
            y: 200,
            opacity: 0
        });
        TweenMax.to($scenes3Slide1Abs, 0, {
            y: 200,
            opacity: 0
        });
        TweenMax.to($scenes3Slide1Cont, 0, {
            y: -100,
            opacity: 0
        });
        // if (triangleBg !== null) {
        triangleBgHide();
        // }
    };
    var scenes3Slide1Show = function scenes3Slide1Show() {
        TweenMax.to($scenes3Slide1Title, 2.2, {
            y: 0,
            opacity: 1,
            ease: Power0.ease,
            onComplete: function onComplete() {
                if (scenes3SwiperIns[0] === undefined) {
                    scenes3SwiperIns[0] = scenes3SwiperInInit(0);
                }
            }
        });
        TweenMax.to($scenes3Slide1Abs, 1.4, {
            y: 0,
            opacity: 1,
            ease: Power0.ease
        });
        TweenMax.to($scenes3Slide1Cont, 2, {
            y: 0,
            opacity: 1,
            ease: Power0.ease
        });
        triangleBgShow();
    };
    /* -------------------------------------------------------------------------
     * scenes4
    ------------------------------------------------------------------------- */
    // 4
    var scenes4Bg = null;
    var scenes4BgInit = function scenes4BgInit(swiperRealIndex) {
        if (scenes4Bg === null) {
            scenes4Bg = $.getScript("bg-scenes4.hyperesources/bgscenes4_hype_generated_script.js");
        }
    };
    var scenes4Init = function scenes4Init(swiperRealIndex) {
        if (mainSwiperRealIndex === 3) {
            scenes4BgInit(swiperRealIndex);
        }
    };
    /* -------------------------------------------------------------------------
     * nav
    ------------------------------------------------------------------------- */
    var $nav = $('#nav');
    var $navLine = $nav.find('.nav-line');
    var $navA = $nav.find('.nav-btn-box a');
    $navA.on('mouseover', function () {
        navLine($(this).index() - 1, 0.3);
    });
    var navLine = function navLine(index, time) {
        TweenMax.to($navLine, time, {
            x: index * (100 + 20)
        });
    };
    // nav按钮点击事件
    $navA.on('click', function (e) {
        e.preventDefault();
        // console.log($(this).index()-1);
        mainSwiper.slideTo($(this).index() - 1);
        return false;
    });
    /* -------------------------------------------------------------------------
     * triangleBg
    ------------------------------------------------------------------------- */
    var triangleBg = null;
    var $triangleBg = null;
    var triangleBgHide = function triangleBgHide() {
        if (triangleBg !== null) {
            console.log('triangleBgHide');
            TweenMax.to($triangleBg, 0, { opacity: 0 });
        }
    };
    var triangleBgShow = function triangleBgShow() {
        if (triangleBg !== null) {
            console.log('triangleBgShow');
            TweenMax.to($triangleBg, 3, { opacity: 0.2 });
        }
    };;
    var triangleBgInit = function triangleBgInit(swiperRealIndex, num) {
        if (swiperRealIndex === num && triangleBg === null) {
            $triangleBg = $('#triangleBg');
            triangleBg = $.getScript("lib/triangleBg/triangleBg.js", function () {
                triangleBgShow();
            });
            triangleBgHide();
        }
    };
    /* -------------------------------------------------------------------------
     * xinhuaTalking
    ------------------------------------------------------------------------- */
    var xinhuaTalking = {
        $nav: $nav,
        navHeight: 67,
        // scenesMain_realIndex: 0,
        $scenes1: $scenes1,
        scenes1: null,
        init: function init() {
            var _this = this;
            // swiper
            mainSwiper = new Swiper('#main', {
                lazyLoading: true,
                speed: 1000,
                hashnav: true, // for dev
                hashnavWatchState: true,
                direction: 'vertical',
                keyboardControl: true,
                mousewheelControl: true,
                runCallbacksOnInit: true, // 必须开启，onInit触发回调
                onInit: function onInit(swiper) {
                    // getSize
                    _this.getSize();
                    // nav
                    _this.navHeight = _this.$nav.height();
                    // navLine(swiper.realIndex, 1);
                    $window.on('resize', function () {
                        if (mainSwiperRealIndex < 1) {
                            _this.getSize();
                        }
                        _this.navSetPosition(mainSwiperRealIndex);
                    });
                    _this.scenes1Init(swiper.realIndex);
                },
                onSlideChangeStart: function onSlideChangeStart(swiper) {
                    mainSwiperRealIndex = swiper.realIndex;
                    _this.navSetPosition(swiper.realIndex);
                    scenes2Init(swiper.realIndex);
                },
                onSlideChangeEnd: function onSlideChangeEnd(swiper) {
                    navLine(swiper.realIndex, 1);
                    // scenes1Init
                    _this.scenes1Init(swiper.realIndex);
                    scenes3Init(swiper.realIndex);
                    scenes4Init(swiper.realIndex);
                }
            });
        },
        scenes1Init: function scenes1Init(num) {
            $scenes1.show();
            var _this = this;
            scenes1Slide1Ani(num);
            if (num === 0) {
                _this.zoom();
                if (scenes1Swiper === null) {
                    console.log('scenes1Init start');
                    scenes1Swiper = new Swiper('#scenes1', {
                        spaceBetween: 200,
                        lazyLoading: true,
                        // autoplay: 12000,
                        parallax: true,
                        pagination: '#scenes1-pagination',
                        prevButton: '#scenes1-prev',
                        nextButton: '#scenes1-next',
                        paginationClickable: true,
                        speed: 3000,
                        runCallbacksOnInit: true,
                        onInit: function onInit(swiper) {
                            // getSwiperData
                            _this.getSwiperData();
                            _this.qrcode();
                            // 图片盒子 hover
                            $scenes1SlidePic.on('mouseover', function () {
                                TweenMax.to($(this), 0.8, { x: 30 });
                            }).on('mouseout', function () {
                                TweenMax.to($(this), 0.8, { x: 0 });
                            });
                            // swiper.nextButton
                            //     .addClass('active')
                            //     .on('mouseout', function () {
                            //         $(this).removeClass('active');
                            //     });
                            // 按钮移除 active
                            swiper.nextButton.on('mouseout', function () {
                                swiper.nextButton.removeClass('active');
                            });
                            swiper.prevButton.on('mouseover', function () {
                                swiper.nextButton.removeClass('active');
                            });
                            var num = [swiper.realIndex - 1, swiper.realIndex + 1];
                            if (num[0] < 0) {
                                num[0] = _this.data.length - 1;
                            }
                            if (num[1] >= _this.data.length) {
                                num[1] = 0;
                            }
                            _this.setSwiperButton(swiper.prevButton, num[0]);
                            _this.setSwiperButton(swiper.nextButton, num[1]);
                        },
                        onSlideChangeStart: function onSlideChangeStart(swiper) {
                            var num = [swiper.realIndex - 1, swiper.realIndex + 1];
                            if (num[0] < 0) {
                                num[0] = _this.data.length - 1;
                            }
                            if (num[1] >= _this.data.length) {
                                num[1] = 0;
                            }
                            _this.setSwiperButton(swiper.prevButton, num[0]);
                            _this.setSwiperButton(swiper.nextButton, num[1]);
                        }
                    });
                } else {
                    scenes1Swiper.unlockSwipes();
                }
                // if (coverStatus === 'hide') {
                //     scenes1Slide1Show();
                // }
            } else {
                if (scenes1Swiper !== null) {
                    scenes1Swiper.lockSwipes();
                }
                // if (coverStatus === 'hide') {
                //     scenes1Slide1Hide();
                // }
            }
        },
        getSwiperData: function getSwiperData() {
            var _this = this;
            _this.data = new Array();
            $scenes1.find('.swiper-slide').each(function (i, e) {
                var $e = $(e);
                _this.data.push({
                    title: $.trim($e.find('.scenes1-title-1').text()),
                    img: $e.find('.scenes1-pic img').attr('src')
                });
            });
            console.log(_this.data);
        },
        setSwiperButton: function setSwiperButton($tag, num) {
            var _this = this;
            $tag.html('\n                    <div class="swiper-button-content">\n                        <div class="p">\n                            <img src="' + _this.data[num].img + '" width="102" height="auto">\n                        </div>\n                        <div class="t">' + _this.data[num].title + '</div>\n                    </div>\n                    <div class="icon"></div>\n                    <div class="b"></div>');
        },
        getSize: function getSize() {
            this.size = {
                height: $window.height(),
                width: $window.width()
            };
        },
        qrcode: function qrcode() {
            var qrcodes = $scenes1.find('.scenes1-qrcode');
            qrcodes.each(function (i, e) {
                var $e = $(e);
                $e.qrcode({
                    correctLevel: 1,
                    // background: "#999",
                    foreground: "#333", //"#0099ff"
                    width: 108,
                    height: 108,
                    text: $.trim($e.find('.scenes1-qrcode-url').text())
                });
            });
        },
        zoomTags: [{
            tag: '.scenes1-logo'
        }, {
            tag: '.scenes1-title-top'
        }, {
            tag: '.scenes1-title-1'
        }, {
            tag: '.scenes1-title-4'
        }, {
            tag: '.scenes1-content'
        }],
        zoomResize: null,
        zoomRatio: function zoomRatio(num) {
            return Math.round(num * this.size.height / 1080);
        },
        zoomSet: function zoomSet(opt) {
            var _this = this;
            var css = {
                top: _this.zoomRatio(opt.num)
            };
            if (opt.type === 'height') {
                css = {
                    height: _this.zoomRatio(opt.num)
                };
            }
            opt.tag.css(css);
        },
        zoomSets: function zoomSets() {
            console.log('zoomSets');
            this.getSize();
            for (var i = 0, j = this.zoomTags.length; i < j; i++) {
                if (!this.zoomTags[i].num) {
                    this.zoomTags[i].tag = this.$scenes1.find(this.zoomTags[i].tag);
                    if (this.zoomTags[i].type !== 'height') {
                        this.zoomTags[i].num = this.zoomTags[i].tag.offset().top;
                    } else {
                        this.zoomTags[i].num = this.zoomTags[i].tag.outerHeight();
                    }
                }
                this.zoomSet(this.zoomTags[i]);
            }
        },
        zoom: function zoom() {
            console.log('zoom');
            var _this = this;
            if (_this.zoomResize === null) {
                _this.zoomResize = $window.on('resize', function () {
                    _this.zoomSets();
                });
            }
            _this.zoomSets();
        },
        navSetPositionAnis: function navSetPositionAnis(num, time, callback) {
            TweenMax.to(this.$nav, time, {
                top: num,
                bottom: 'auto',
                onComplete: callback || null
            });
        },
        navSetPosition: function navSetPosition(scenesMain_realIndex) {
            var _this = this;
            if (scenesMain_realIndex < 1) {
                _this.navSetPositionAnis(_this.size.height - _this.navHeight, 0.6, function () {
                    _this.$nav.removeClass('nav-isTop');
                });
            } else {
                _this.navSetPositionAnis(0, 0.6, function () {
                    _this.$nav.addClass('nav-isTop');
                });
            }
        }
    };
    // 读取开始
    loader.start();
});
